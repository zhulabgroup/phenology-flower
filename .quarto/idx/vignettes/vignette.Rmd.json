{"title":"Predicting reproductive phenology of wind-pollinated trees via PlanetScope time series","markdown":{"yaml":{"title":"Predicting reproductive phenology of wind-pollinated trees via PlanetScope time series","author":"Yiluan Song","date":"`r format(Sys.time(), '%B %d, %Y')`","output":"html_document"},"headingText":"Preparation","containsRefs":false,"markdown":"\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)\n```\n\n```{r, eval=TRUE}\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\nif (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\")\n\n# List of required packages\nrequired_packages <- c(\n  \"broom\", \"cowplot\", \"doSNOW\", \"dotenv\", \"foreach\", \"geosphere\", \"ggpubr\", \"ggrepel\", \"ggspatial\", \"ggthemes\", \"imputeTS\", \"knitr\", \"lmerTest\", \"lubridate\", \"magick\", \"mclust\", \"parallel\", \"patchwork\", \"ptw\", \"rnpn\", \"rsconnect\", \"scales\", \"sf\", \"shiny\", \"taxize\", \"terra\", \"tidyverse\"\n)\n\n# Identify missing packages\nmissing_packages <- setdiff(required_packages, rownames(installed.packages()))\n\n# Install if there are missing packages\nif (length(missing_packages) > 0) {\n  pacman::p_install(missing_packages)\n} else {\n  message(\"All required packages are already installed. Skipping installation.\")\n}\n\n# Check and install tidynab from GitHub\nif (!requireNamespace(\"tidynab\", quietly = TRUE)) {\n  devtools::install_github(\"zhulabgroup/tidynab\")\n}\n\npacman::p_load(\"tidyverse\")\npacman::p_load(\"sf\")\npacman::p_load(\"parallel\")\npacman::p_load(\"doSNOW\")\npacman::p_load(\"patchwork\")\n\nsource(\"code/util_whit.R\")\nsource(\"code/util_extend_ts.R\")\n```\n\n```{r}\n.fig_save <- T\n```\n\n```{r}\n.path <- list(\n  out_fig = \"figures/\",\n  nab = \"data/input/nab/\",\n  occ = \"data/input/occurrence/\",\n  neon = \"data/input/neon/\",\n  npn = \"data/input/npn/\",\n  ps = \"data/input/ps/\",\n  dat_inter = \"data/intermediate/\",\n  dat_out = \"data/output/\"\n)\n```\n\n\nTaxa of interest are based on 1) [Lo et al.,2019](https://doi.org/10.1007/s10453-019-09601-2) (Description and allergenic potential of 11 most important pollen taxa in the CUSSC region ranked by percent abundance relative to the sum of all pollen taxa over 31 NAB stations that meet inclusion criteria, 2003â€“2017) and 2) [Crimmins et al., 2023](https://doi.org/10.1007/s00484-023-02506-3). Spring- and fall-flowering elms are treated separately as suggested by Allison and Yingxiao.\n```{r, eval=TRUE}\nv_taxa <- c(\"Acer\", \"Alnus\", \"Betula\", \"Carya\", \"Celtis\", \"Fraxinus\", \"Juglans\", \"Liquidambar\", \"Morus\", \"Platanus\", \"Populus\", \"Quercus\", \"Salix\", \"Ulmus early\", \"Ulmus late\")\nv_taxa_short <- str_split(v_taxa, pattern = \" \", simplify = T)[, 1]\n```\n\nFocus on the life cycles from 2018 to 2022, spanning 2017 and 2023. This is because of the availability of PlanetScope data.\n```{r, eval=TRUE, echo=FALSE, fig.width=7, fig.height=5}\nsource(\"code/data_ps_dove.R\")\np_dove\n```\n\n```{r, eval=TRUE}\nv_year <- 2018:2022\n```\n\n# Tree-level flowering phenology\n\nPlanetScope-derived vegetative phenology correlates with flowering phenology derived from NEON.\n\n## Data\n\nRead NEON phenometrics data prepared in a previous project.\n```{r, fig.width=7, fig.height=4}\nsource(\"code/neon_data_pheno.R\")\np_neon_map\n```\n\nRead in NEON PlanetScope data (day of year) prepared with our own batchplanet package.\n```{r, fig.width=9, fig.height=6}\ndf_neon_doy <- read_rds(str_c(.path$ps,\"df_neon_doy.rds\"))\nsource(\"code/neon_plot_data.R\")\np_neon_data\n```\n\n## Analysis\n\nCorrelation between 50% green-up time from PlanetScope and flower onset time from NEON.\n\n```{r, fig.width=10, fig.height=6}\nsource(\"code/neon_corr.R\")\np_neon_ps_corr_flower\n```\n\nCorrelation between leaf and flower onset time from NEON.\n\n```{r, fig.width=10, fig.height=6}\nsource(\"code/neon_leaf_flower.R\")\np_neon_leaf_flower\n```\n```{r, eval=TRUE, fig.width=10, fig.height=12, fig.cap=\"Individual phenological observations extracted from PlanetScope (PS) and National Ecological Observatory Network (NEON) for wind-pollinated taxa. (A) Extraction of individual-level phenological metric from PS data, showing Enhanced Vegetation Index (black point), smoothed Enhanced Vegetation Index (green line), period of green-up (green shade), and extracted 50% green-up time (vertical green line), using two individuals at HARV and ORNL sites as examples. (B) Correlation between time of 50% green-up from PS and time of flower onset from NEON.\", echo=F}\np_neon_data +\n  p_neon_ps_corr_flower +\n  p_neon_leaf_flower +\n  plot_layout(\n    design = \"\n  A\n  B\n\",\n    heights = c(1, 1)\n  ) +\n  plot_annotation(tag_levels = \"A\")\n```\n\n# City-level pollen phenology\n\n```{r, eval=TRUE, fig.width=16, fig.height=10, fig.cap=\"Approach for detecting pollen phenology from remotely-sensed leafing phenology. Enhanced vegetation index (EVI) time series of individual trees are used to determine green-up/down days at various green-up/down thresholds. The green-up/down days were then summarized to the site level as green-up/down frequencies. The green-up/down frequencies were compared with time series of pollen count (squareroot-transformed). For each taxa and across all sites, the green-up/down threshold that lead to the best match in the shapes of leafing and pollen phenology curves was chosen. For each site specifically, the best lag between leafing and pollen phenology curves were chosen.\", echo = F}\nsource(\"code/city_concept.R\")\np_conceptual\n```\n## NAB data\n\nNAB data were used to calibrate and validate city-level pollen phenology.\n\nRead in data using tidynab package.\n```{r, eval=T}\nsource(\"code/data_nab_read.R\")\n```\n\nFocus on seven major cities in CONUS with pollen count data and street tree inventory.\n\nExceptions: Denver pollen data are from Colorado Springs; Austin pollen data are from Georgetown; Detroit pollen data are from Sylvania.\n\n```{r, eval=TRUE}\nv_site <- c(\"NY\", \"AT\", \"ST\", \"HT\", \"TP\", \"DT\", \"DV\")\nv_site_name <- c(\"New York\", \"Austin\", \"Seattle\", \"Houston\", \"Tampa\", \"Detroit\", \"Denver\")\nv_site_tune <- c(\"NY\", \"AT\", \"ST\", \"HT\", \"TP\", \"DT\", \"DV\")\n```\n\nRetrieve climatologies (long-term climate) of these cities from TerraClim.\n```{r, eval=TRUE}\nsource(\"code/data_terraclim.R\")\ndf_terraclim\n```\n\n```{r, eval=TRUE}\nsource(\"code/data_nab_meta.R\")\np_pollen_map\n```\n\n```{r, eval=TRUE, fig.width=7, fig.height=5}\nsource(\"code/data_nab_avail.R\")\np_nab_avail\n```\n\nView pollen phenology in study sites.\n```{r, eval=TRUE, fig.width=9, fig.height=6}\nsource(\"code/data_nab_pheno.R\")\np_nab_calen\n```\n\nEstimate genus-specific pollen seasons by fitting Gaussian kernels.\n```{r, fig.width=10, fig.height=5}\nsource(\"code/data_nab_window.R\")\np_flower_window\n```\n\n## NPN data\n\nNPN data were used in addition to NAB data to validate city-level pollen phenology.\n\nDownload all NPN data for taxa studied.\n```{r, eval = F}\nsource(\"code/data_npn_down.R\")\n```\n\nVisualize NPN data and visualize.\n```{r, eval=TRUE, fig.width=9, fig.height=6}\nsource(\"code/data_npn_pheno.R\")\np_npn_calen\n```\n\n## Street tree inventory data\n\nStreet tree inventory data from seven cities were compiled to locate pixels of interest for PlanetScope data retrieval.\n\nRead in data previously processed with batchplanet package.\n```{r, eval=T}\nsource(\"code/data_occ_tree_read.R\")\n```\n\nFind family names from genus names. This step needs supervision when run for the first time.\n```{r, eval=T}\nsource(\"code/data_occ_tree_taxa.R\")\n```\n\nMap relative position of tree inventory and nab station.\n```{r, eval=TRUE, fig.width=7, fig.height=4}\nsource(\"code/data_occ_map.R\")\np_nab_plant_map\n```\n\nCalculate distance from plants to NAB stations in the unit of km.\n```{r, eval=TRUE}\nsource(\"code/data_occ_dist.R\")\ndf_distance\n```\n\nPrepare street map as basemap. Street shapefiles for major cities manually downloaded from https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/CUWWYJ.\nBoeing, Geoff, 2017, \"U.S. Street Network Shapefiles, Node/Edge Lists, and GraphML Files\", https://doi.org/10.7910/DVN/CUWWYJ, Harvard Dataverse, V2\n```{r, eval=TRUE}\nsource(\"code/data_occ_road_read.R\")\n```\n\nMap plant occurrence in a city.\n```{r, eval=TRUE, fig.width=12, fig.height=12}\nsource(\"code/data_occ_road_map.R\")\np_plant_map\n```\n\n\n## PlanetScope data\n\nPlanetScope data were previously processed using batchplanet package.\n\nHere we visualize a subset of street trees in Detroit overlayed on a true-color PlanetScope image on May 8, 2017.\n```{r, eval = TRUE, fig.width=7, fig.height=5}\nsource(\"code/data_ps_snap.R\")\np_ps_snap\n```\n\n```{r, eval=TRUE, fig.width=9, fig.height=9, fig.cap=\"Pollen count and plant occurrence data. (A) Map of pollen counting stations associated with the National Allergy Bureau (NAB) and plant records near selected pollen counting stations. All pollen counting stations are marked in crossed circles, with ten selected stations in this study highlighted in red. Plant occurrence data from street tree inventory, land cover classification, and crowdsourcing are marked in blue points. (B) Pollen phenology of eleven key pollen-producing taxa in ten selected stations. (C) Spatial distribution of pollen-producing plants at ten study sites. Basemap show streets in cities. For simplicity, random 200 plants are visualized for each site.\", echo = F}\np_nab_plant_map +\n  p_nab_calen +\n  p_ps_snap +\n  plot_layout(\n    design = \"\n  AC\n  BB\n\",\n    widths = c(1, 1),\n    heights = c(1, 2)\n  ) +\n  plot_annotation(tag_levels = \"A\")\n```\n\n## Characterize phenology\nSet green-up/down thresholds for each taxa.\n```{r}\nsource(\"code/city_prep.R\")\n```\n\nRead in green-up down day of year previously processed using the batchplanet package.\n```{r, eval = F}\nsource(\"code/city_doy.R\")\n```\n\nConvert into probability density.\n```{r, eval = FALSE}\nsource(\"code/city_freq.R\")\n```\n\nProcess NAB and NPN data into probability density representing city-level flowering and pollen phenology, respectively.\n```{r, eval=FALSE}\nsource(\"code/city_data.R\")\n```\n\n## Tune parameters\n\nPrepare some functions for plotting.\n```{r}\nsource(\"code/city_plot.R\")\n```\n\nTune green-up/down threshold and leaf-flower lag with NAB data.\n```{r, eval = FALSE}\nsource(\"code/city_tune.R\")\n```\n\n## Visualize predictions\n\nPrepare for Shiny app by copying result figures to the current folder. Shiny app code is in ./shinyapp/app.R. Needs to deploy app once every time results are changed.\n```{r, eval=FALSE}\nsource(\"code/city_shiny.R\")\n```\n\nDisplay results in a Shiny app.\n```{r, eval=TRUE, cache=FALSE, echo = FALSE}\nknitr::include_app(\"https://yiluansong.shinyapps.io/RS4flower_result/\", height = \"600px\")\n```\n\nMake some summary plots.\n```{r}\nsource(\"code/city_plot_subset.R\")\n```\n\n```{r, fig.width=8, fig.height=8}\np_comp_1city\n```\n\n```{r, fig.width=8, fig.height=10}\np_comp_1taxa\n```\n\n```{r, fig.width=7, fig.height=5}\np_comp_1taxa2city\n```\n\n```{r, fig.width=12, fig.height=8}\np_city_corr\n```\n\n## Cross validation\n\nPlot correlation between mean annual temperature (MAT) and lag between green-up/down frequency and pollen count.\n* A positive lag means leafing phenology leads pollen phenology; a negative lag means leafing phenology lags pollen phenology.\n```{r, eval=TRUE}\nsource(\"code/city_clim_plot.R\")\np_lag_clim\n```\n* At warmer places, oak pollen tend to precede 50% green-up and vice versa.\n\nLinear regression to check significance of the correlation.\n```{r, eval=TRUE}\nsource(\"code/city_clim_reg.R\")\np_slope\n```\n\nWe conducted leave-one-out cross validation to test the robustness of the climate-phenology relationship and the effectiveness of using it to infer flowering phenology in new locations. Specifically, we removed a random city from the pollen dataset at a time, matched leafing and pollen phenology in the other cities, and modeled the climate-lag correlation. We predicted the leafing-phenology lag with the linear model and subsequently predicted the flowering phenology from known leafing phenology at the city held for validation. We evaluated the accuracy of our methods by calculating the RMSE between the predicted flowering phenology and standardized pollen count observations at the cities held for validation.\n\n```{r, eval=FALSE}\nsource(\"code/city_loocv.R\")\n```\n\n## Evaluate performance\n\n```{r, eval=TRUE, fig.width=10, fig.height=6}\nsource(\"code/city_fit.R\")\n\ndf_fit_all %>%\n  drop_na(nrmse) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(nrmse),\n    mean = mean(nrmse),\n    lower = quantile(nrmse, 0.025),\n    upper = quantile(nrmse, 0.975),\n    n = n()\n  )\ndf_fit_all %>%\n  drop_na(nrmse) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(nrmse),\n    mean = mean(nrmse),\n    lower = quantile(nrmse, 0.025),\n    upper = quantile(nrmse, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_nrmse\n\ndf_fit_all %>%\n  drop_na(spearman) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(spearman),\n    mean = mean(spearman),\n    lower = quantile(spearman, 0.025),\n    upper = quantile(spearman, 0.975),\n    n = n()\n  )\ndf_fit_all %>%\n  group_by(method, sig) %>%\n  summarise(n = n())\ndf_fit_all %>%\n  drop_na(spearman) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(spearman),\n    mean = mean(spearman),\n    lower = quantile(spearman, 0.025),\n    upper = quantile(spearman, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_spearman\n```\n\nValidate with NPN instead of NAB and visualize.\n```{r, eval=TRUE, fig.width=10, fig.height=6}\ndf_fit_all %>%\n  drop_na(spearman_npn) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(spearman_npn),\n    mean = mean(spearman_npn),\n    lower = quantile(spearman_npn, 0.025),\n    upper = quantile(spearman_npn, 0.975),\n    n = n()\n  )\n\ndf_fit_all %>%\n  group_by(method, sig_npn) %>%\n  summarise(n = n())\ndf_fit_all %>%\n  drop_na(spearman_npn) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(spearman_npn),\n    mean = mean(spearman_npn),\n    lower = quantile(spearman_npn, 0.025),\n    upper = quantile(spearman_npn, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_spearman_npn\n```\n\n```{r, eval=TRUE, fig.width=10, fig.height=10, fig.cap=\"Comparing remotely-sensed pollen phenology from PlanetScope and site-level pollen phenology from aerial sampling. (A) Pollen phenology inferred from remotely-sensed leafing phenology tuned to the optimal green-up/down thresholds and leafing-pollen lags (lines) compared to pollen phenology inferred from airborne pollen concentration (points). Pollen phenology from both data sources was converted to probability density within each site year for comparison. Here we show examples of oak (_Quercus_ spp.) pollen phenology at two sites on the south (Houston) and north (Detroit) of CONUS. (B) Accuracy of inferring pollen phenology across taxa measured with Spearman correlation coefficient, in-sample (fitting model with data from all sites) and out-of-sample (leave-one-out cross-validation).\", echo = F}\nsource(\"code/city_comp_fig.R\")\np_main_city\n```\n","srcMarkdownNoYaml":"\n\n# Preparation\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)\n```\n\n```{r, eval=TRUE}\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\nif (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\")\n\n# List of required packages\nrequired_packages <- c(\n  \"broom\", \"cowplot\", \"doSNOW\", \"dotenv\", \"foreach\", \"geosphere\", \"ggpubr\", \"ggrepel\", \"ggspatial\", \"ggthemes\", \"imputeTS\", \"knitr\", \"lmerTest\", \"lubridate\", \"magick\", \"mclust\", \"parallel\", \"patchwork\", \"ptw\", \"rnpn\", \"rsconnect\", \"scales\", \"sf\", \"shiny\", \"taxize\", \"terra\", \"tidyverse\"\n)\n\n# Identify missing packages\nmissing_packages <- setdiff(required_packages, rownames(installed.packages()))\n\n# Install if there are missing packages\nif (length(missing_packages) > 0) {\n  pacman::p_install(missing_packages)\n} else {\n  message(\"All required packages are already installed. Skipping installation.\")\n}\n\n# Check and install tidynab from GitHub\nif (!requireNamespace(\"tidynab\", quietly = TRUE)) {\n  devtools::install_github(\"zhulabgroup/tidynab\")\n}\n\npacman::p_load(\"tidyverse\")\npacman::p_load(\"sf\")\npacman::p_load(\"parallel\")\npacman::p_load(\"doSNOW\")\npacman::p_load(\"patchwork\")\n\nsource(\"code/util_whit.R\")\nsource(\"code/util_extend_ts.R\")\n```\n\n```{r}\n.fig_save <- T\n```\n\n```{r}\n.path <- list(\n  out_fig = \"figures/\",\n  nab = \"data/input/nab/\",\n  occ = \"data/input/occurrence/\",\n  neon = \"data/input/neon/\",\n  npn = \"data/input/npn/\",\n  ps = \"data/input/ps/\",\n  dat_inter = \"data/intermediate/\",\n  dat_out = \"data/output/\"\n)\n```\n\n\nTaxa of interest are based on 1) [Lo et al.,2019](https://doi.org/10.1007/s10453-019-09601-2) (Description and allergenic potential of 11 most important pollen taxa in the CUSSC region ranked by percent abundance relative to the sum of all pollen taxa over 31 NAB stations that meet inclusion criteria, 2003â€“2017) and 2) [Crimmins et al., 2023](https://doi.org/10.1007/s00484-023-02506-3). Spring- and fall-flowering elms are treated separately as suggested by Allison and Yingxiao.\n```{r, eval=TRUE}\nv_taxa <- c(\"Acer\", \"Alnus\", \"Betula\", \"Carya\", \"Celtis\", \"Fraxinus\", \"Juglans\", \"Liquidambar\", \"Morus\", \"Platanus\", \"Populus\", \"Quercus\", \"Salix\", \"Ulmus early\", \"Ulmus late\")\nv_taxa_short <- str_split(v_taxa, pattern = \" \", simplify = T)[, 1]\n```\n\nFocus on the life cycles from 2018 to 2022, spanning 2017 and 2023. This is because of the availability of PlanetScope data.\n```{r, eval=TRUE, echo=FALSE, fig.width=7, fig.height=5}\nsource(\"code/data_ps_dove.R\")\np_dove\n```\n\n```{r, eval=TRUE}\nv_year <- 2018:2022\n```\n\n# Tree-level flowering phenology\n\nPlanetScope-derived vegetative phenology correlates with flowering phenology derived from NEON.\n\n## Data\n\nRead NEON phenometrics data prepared in a previous project.\n```{r, fig.width=7, fig.height=4}\nsource(\"code/neon_data_pheno.R\")\np_neon_map\n```\n\nRead in NEON PlanetScope data (day of year) prepared with our own batchplanet package.\n```{r, fig.width=9, fig.height=6}\ndf_neon_doy <- read_rds(str_c(.path$ps,\"df_neon_doy.rds\"))\nsource(\"code/neon_plot_data.R\")\np_neon_data\n```\n\n## Analysis\n\nCorrelation between 50% green-up time from PlanetScope and flower onset time from NEON.\n\n```{r, fig.width=10, fig.height=6}\nsource(\"code/neon_corr.R\")\np_neon_ps_corr_flower\n```\n\nCorrelation between leaf and flower onset time from NEON.\n\n```{r, fig.width=10, fig.height=6}\nsource(\"code/neon_leaf_flower.R\")\np_neon_leaf_flower\n```\n```{r, eval=TRUE, fig.width=10, fig.height=12, fig.cap=\"Individual phenological observations extracted from PlanetScope (PS) and National Ecological Observatory Network (NEON) for wind-pollinated taxa. (A) Extraction of individual-level phenological metric from PS data, showing Enhanced Vegetation Index (black point), smoothed Enhanced Vegetation Index (green line), period of green-up (green shade), and extracted 50% green-up time (vertical green line), using two individuals at HARV and ORNL sites as examples. (B) Correlation between time of 50% green-up from PS and time of flower onset from NEON.\", echo=F}\np_neon_data +\n  p_neon_ps_corr_flower +\n  p_neon_leaf_flower +\n  plot_layout(\n    design = \"\n  A\n  B\n\",\n    heights = c(1, 1)\n  ) +\n  plot_annotation(tag_levels = \"A\")\n```\n\n# City-level pollen phenology\n\n```{r, eval=TRUE, fig.width=16, fig.height=10, fig.cap=\"Approach for detecting pollen phenology from remotely-sensed leafing phenology. Enhanced vegetation index (EVI) time series of individual trees are used to determine green-up/down days at various green-up/down thresholds. The green-up/down days were then summarized to the site level as green-up/down frequencies. The green-up/down frequencies were compared with time series of pollen count (squareroot-transformed). For each taxa and across all sites, the green-up/down threshold that lead to the best match in the shapes of leafing and pollen phenology curves was chosen. For each site specifically, the best lag between leafing and pollen phenology curves were chosen.\", echo = F}\nsource(\"code/city_concept.R\")\np_conceptual\n```\n## NAB data\n\nNAB data were used to calibrate and validate city-level pollen phenology.\n\nRead in data using tidynab package.\n```{r, eval=T}\nsource(\"code/data_nab_read.R\")\n```\n\nFocus on seven major cities in CONUS with pollen count data and street tree inventory.\n\nExceptions: Denver pollen data are from Colorado Springs; Austin pollen data are from Georgetown; Detroit pollen data are from Sylvania.\n\n```{r, eval=TRUE}\nv_site <- c(\"NY\", \"AT\", \"ST\", \"HT\", \"TP\", \"DT\", \"DV\")\nv_site_name <- c(\"New York\", \"Austin\", \"Seattle\", \"Houston\", \"Tampa\", \"Detroit\", \"Denver\")\nv_site_tune <- c(\"NY\", \"AT\", \"ST\", \"HT\", \"TP\", \"DT\", \"DV\")\n```\n\nRetrieve climatologies (long-term climate) of these cities from TerraClim.\n```{r, eval=TRUE}\nsource(\"code/data_terraclim.R\")\ndf_terraclim\n```\n\n```{r, eval=TRUE}\nsource(\"code/data_nab_meta.R\")\np_pollen_map\n```\n\n```{r, eval=TRUE, fig.width=7, fig.height=5}\nsource(\"code/data_nab_avail.R\")\np_nab_avail\n```\n\nView pollen phenology in study sites.\n```{r, eval=TRUE, fig.width=9, fig.height=6}\nsource(\"code/data_nab_pheno.R\")\np_nab_calen\n```\n\nEstimate genus-specific pollen seasons by fitting Gaussian kernels.\n```{r, fig.width=10, fig.height=5}\nsource(\"code/data_nab_window.R\")\np_flower_window\n```\n\n## NPN data\n\nNPN data were used in addition to NAB data to validate city-level pollen phenology.\n\nDownload all NPN data for taxa studied.\n```{r, eval = F}\nsource(\"code/data_npn_down.R\")\n```\n\nVisualize NPN data and visualize.\n```{r, eval=TRUE, fig.width=9, fig.height=6}\nsource(\"code/data_npn_pheno.R\")\np_npn_calen\n```\n\n## Street tree inventory data\n\nStreet tree inventory data from seven cities were compiled to locate pixels of interest for PlanetScope data retrieval.\n\nRead in data previously processed with batchplanet package.\n```{r, eval=T}\nsource(\"code/data_occ_tree_read.R\")\n```\n\nFind family names from genus names. This step needs supervision when run for the first time.\n```{r, eval=T}\nsource(\"code/data_occ_tree_taxa.R\")\n```\n\nMap relative position of tree inventory and nab station.\n```{r, eval=TRUE, fig.width=7, fig.height=4}\nsource(\"code/data_occ_map.R\")\np_nab_plant_map\n```\n\nCalculate distance from plants to NAB stations in the unit of km.\n```{r, eval=TRUE}\nsource(\"code/data_occ_dist.R\")\ndf_distance\n```\n\nPrepare street map as basemap. Street shapefiles for major cities manually downloaded from https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/CUWWYJ.\nBoeing, Geoff, 2017, \"U.S. Street Network Shapefiles, Node/Edge Lists, and GraphML Files\", https://doi.org/10.7910/DVN/CUWWYJ, Harvard Dataverse, V2\n```{r, eval=TRUE}\nsource(\"code/data_occ_road_read.R\")\n```\n\nMap plant occurrence in a city.\n```{r, eval=TRUE, fig.width=12, fig.height=12}\nsource(\"code/data_occ_road_map.R\")\np_plant_map\n```\n\n\n## PlanetScope data\n\nPlanetScope data were previously processed using batchplanet package.\n\nHere we visualize a subset of street trees in Detroit overlayed on a true-color PlanetScope image on May 8, 2017.\n```{r, eval = TRUE, fig.width=7, fig.height=5}\nsource(\"code/data_ps_snap.R\")\np_ps_snap\n```\n\n```{r, eval=TRUE, fig.width=9, fig.height=9, fig.cap=\"Pollen count and plant occurrence data. (A) Map of pollen counting stations associated with the National Allergy Bureau (NAB) and plant records near selected pollen counting stations. All pollen counting stations are marked in crossed circles, with ten selected stations in this study highlighted in red. Plant occurrence data from street tree inventory, land cover classification, and crowdsourcing are marked in blue points. (B) Pollen phenology of eleven key pollen-producing taxa in ten selected stations. (C) Spatial distribution of pollen-producing plants at ten study sites. Basemap show streets in cities. For simplicity, random 200 plants are visualized for each site.\", echo = F}\np_nab_plant_map +\n  p_nab_calen +\n  p_ps_snap +\n  plot_layout(\n    design = \"\n  AC\n  BB\n\",\n    widths = c(1, 1),\n    heights = c(1, 2)\n  ) +\n  plot_annotation(tag_levels = \"A\")\n```\n\n## Characterize phenology\nSet green-up/down thresholds for each taxa.\n```{r}\nsource(\"code/city_prep.R\")\n```\n\nRead in green-up down day of year previously processed using the batchplanet package.\n```{r, eval = F}\nsource(\"code/city_doy.R\")\n```\n\nConvert into probability density.\n```{r, eval = FALSE}\nsource(\"code/city_freq.R\")\n```\n\nProcess NAB and NPN data into probability density representing city-level flowering and pollen phenology, respectively.\n```{r, eval=FALSE}\nsource(\"code/city_data.R\")\n```\n\n## Tune parameters\n\nPrepare some functions for plotting.\n```{r}\nsource(\"code/city_plot.R\")\n```\n\nTune green-up/down threshold and leaf-flower lag with NAB data.\n```{r, eval = FALSE}\nsource(\"code/city_tune.R\")\n```\n\n## Visualize predictions\n\nPrepare for Shiny app by copying result figures to the current folder. Shiny app code is in ./shinyapp/app.R. Needs to deploy app once every time results are changed.\n```{r, eval=FALSE}\nsource(\"code/city_shiny.R\")\n```\n\nDisplay results in a Shiny app.\n```{r, eval=TRUE, cache=FALSE, echo = FALSE}\nknitr::include_app(\"https://yiluansong.shinyapps.io/RS4flower_result/\", height = \"600px\")\n```\n\nMake some summary plots.\n```{r}\nsource(\"code/city_plot_subset.R\")\n```\n\n```{r, fig.width=8, fig.height=8}\np_comp_1city\n```\n\n```{r, fig.width=8, fig.height=10}\np_comp_1taxa\n```\n\n```{r, fig.width=7, fig.height=5}\np_comp_1taxa2city\n```\n\n```{r, fig.width=12, fig.height=8}\np_city_corr\n```\n\n## Cross validation\n\nPlot correlation between mean annual temperature (MAT) and lag between green-up/down frequency and pollen count.\n* A positive lag means leafing phenology leads pollen phenology; a negative lag means leafing phenology lags pollen phenology.\n```{r, eval=TRUE}\nsource(\"code/city_clim_plot.R\")\np_lag_clim\n```\n* At warmer places, oak pollen tend to precede 50% green-up and vice versa.\n\nLinear regression to check significance of the correlation.\n```{r, eval=TRUE}\nsource(\"code/city_clim_reg.R\")\np_slope\n```\n\nWe conducted leave-one-out cross validation to test the robustness of the climate-phenology relationship and the effectiveness of using it to infer flowering phenology in new locations. Specifically, we removed a random city from the pollen dataset at a time, matched leafing and pollen phenology in the other cities, and modeled the climate-lag correlation. We predicted the leafing-phenology lag with the linear model and subsequently predicted the flowering phenology from known leafing phenology at the city held for validation. We evaluated the accuracy of our methods by calculating the RMSE between the predicted flowering phenology and standardized pollen count observations at the cities held for validation.\n\n```{r, eval=FALSE}\nsource(\"code/city_loocv.R\")\n```\n\n## Evaluate performance\n\n```{r, eval=TRUE, fig.width=10, fig.height=6}\nsource(\"code/city_fit.R\")\n\ndf_fit_all %>%\n  drop_na(nrmse) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(nrmse),\n    mean = mean(nrmse),\n    lower = quantile(nrmse, 0.025),\n    upper = quantile(nrmse, 0.975),\n    n = n()\n  )\ndf_fit_all %>%\n  drop_na(nrmse) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(nrmse),\n    mean = mean(nrmse),\n    lower = quantile(nrmse, 0.025),\n    upper = quantile(nrmse, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_nrmse\n\ndf_fit_all %>%\n  drop_na(spearman) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(spearman),\n    mean = mean(spearman),\n    lower = quantile(spearman, 0.025),\n    upper = quantile(spearman, 0.975),\n    n = n()\n  )\ndf_fit_all %>%\n  group_by(method, sig) %>%\n  summarise(n = n())\ndf_fit_all %>%\n  drop_na(spearman) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(spearman),\n    mean = mean(spearman),\n    lower = quantile(spearman, 0.025),\n    upper = quantile(spearman, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_spearman\n```\n\nValidate with NPN instead of NAB and visualize.\n```{r, eval=TRUE, fig.width=10, fig.height=6}\ndf_fit_all %>%\n  drop_na(spearman_npn) %>%\n  group_by(method) %>%\n  summarise(\n    median = median(spearman_npn),\n    mean = mean(spearman_npn),\n    lower = quantile(spearman_npn, 0.025),\n    upper = quantile(spearman_npn, 0.975),\n    n = n()\n  )\n\ndf_fit_all %>%\n  group_by(method, sig_npn) %>%\n  summarise(n = n())\ndf_fit_all %>%\n  drop_na(spearman_npn) %>%\n  filter(method == \"in-sample\") %>%\n  group_by(taxa) %>%\n  summarise(\n    median = median(spearman_npn),\n    mean = mean(spearman_npn),\n    lower = quantile(spearman_npn, 0.025),\n    upper = quantile(spearman_npn, 0.975),\n    n = n()\n  ) %>%\n  arrange(desc(median))\np_taxa_spearman_npn\n```\n\n```{r, eval=TRUE, fig.width=10, fig.height=10, fig.cap=\"Comparing remotely-sensed pollen phenology from PlanetScope and site-level pollen phenology from aerial sampling. (A) Pollen phenology inferred from remotely-sensed leafing phenology tuned to the optimal green-up/down thresholds and leafing-pollen lags (lines) compared to pollen phenology inferred from airborne pollen concentration (points). Pollen phenology from both data sources was converted to probability density within each site year for comparison. Here we show examples of oak (_Quercus_ spp.) pollen phenology at two sites on the south (Houston) and north (Detroit) of CONUS. (B) Accuracy of inferring pollen phenology across taxa measured with Spearman correlation coefficient, in-sample (fitting model with data from all sites) and out-of-sample (leave-one-out cross-validation).\", echo = F}\nsource(\"code/city_comp_fig.R\")\np_main_city\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"vignette.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","title":"Predicting reproductive phenology of wind-pollinated trees via PlanetScope time series","author":"Yiluan Song","date":"`r format(Sys.time(), '%B %d, %Y')`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}